先安装anaconda3

bash Anaconda.....

点击enter yes 选择目录/home/anaconda3

conda create -n py310 python==3.10.13
上传文件 /home/pixelopen/


pip install -r requirements.txt

conda install uwsgi==2.0.15

# 安装nginx
1. sudo apt-get update
2. sudo apt-get install -y curl openssh-server ca-certificates tzdata perl
3. sudo apt-get install curl openssh-server ca-certificates postfix
4. sudo apt-get install nginx
5. 配置nginx，/etc/nginx/site-available/default  先cp一个副本 default.bak
6. 配置default

server{
        listen          80;
        listen          443 ssl http2;
        server_name     pixelopen.com www.pixelopen.com;
        charset         UTF-8;
        access_log      /var/log/nginx/pixelopen_access.log;
        error_log       /var/log/nginx/pixelopen_error.log;


        ssl_certificate /home/pixelopen/certificate.crt;
        ssl_certificate_key /home/pixelopen/privatekey.pem;

        ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
        ssl_ciphers EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        add_header Strict-Transport-Security "max-age=31536000";
        send_timeout    60;

        client_max_body_size 800M;

        location / {

                proxy_connect_timeout 300s;
                proxy_send_timeout 300s;
                proxy_read_timeout 300s;
                proxy_http_version 1.1;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                uwsgi_send_timeout 60;
                include uwsgi_params;
                uwsgi_pass 127.0.0.1:8999;
                uwsgi_read_timeout 60;
        }

        location /static {
                expires 30d;
                autoindex off;
                add_header Cache-Control private;
                alias /home/pixelopen/static_root;
        }
        location /media {
                autoindex off;
                alias /home/pixelopen/media_root;
        }
}

7. 把ssl的crt和pem准备好。
8. 检查nginx配置是否正确  sudo nginx -t -c /etc/nginx/nginx.conf

sudo systemctl restart nginx

apt install uwsgi


# 后台启动服务
uwsgi -d --ini uwsgi.ini


###########很多问题
1. 静态资源读取404

python manage.py collectstatic 命令来收集静态文件到指定的静态文件目录中

在urls.py中

from django.contrib.staticfiles.views import serve
from django.urls import re_path
 
def return_static(request, path, insecure=True, **kwargs):
  return serve(request, path, insecure, **kwargs)
 
urlpatterns = [
  ...
  re_path(r'^static/(?P<path>.*)$', return_static, name='static'), # 添加这行
]

from django.views.static import serve as static_serve  # 注意这里引入的与上面的不同
from django.urls import re_path
 
urlpatterns = [
  ...
  re_path(r'^media/(?P<path>.*)$' , static_serve, { 'document_root' : settings.MEDIA_ROOT}),
]

python manage.py collectstatic 命令来收集静态文件到指定的静态文件目录中

2. csrf的问题在路由对应函数上添加@csrf_exempt。
3. settings的问题，在uswgi.py中，要选用哪个settings配置。
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'djecommerce.settings.development')   
ROOT_URLCONF = 'djecommerce.urls'
MIDDLEWARE += [ 'allauth.account.middleware.AccountMiddleware']

4. 504的问题，超时，在nginx的uwsgi_read_time设置大一些。用了uwsgi就不要用proxy了


python manage.py makemigrations & python manage.py migrate













第一步，安装gitlab。（部署不用装，git是版本控制的，装在windows也行）
1. sudo apt-get update
2. sudo apt-get install -y curl openssh-server ca-certificates tzdata perl
3. sudo apt-get install curl openssh-server ca-certificates postfix
4. curl -s https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.deb.sh | sudo bash
5. wget --content-disposition https://packages.gitlab.com/gitlab/gitlab-ce/packages/ubuntu/focal/gitlab-ce_17.2.8-ce.0_amd64.deb/download.deb
6. sudo dpkg -i gitlab-ce_17.2.8-ce.0_amd64.deb
7. 
# 停止gitlab服务 
sudo gitlab-ctl stop ​

# 启动gitlab服务 
sudo gitlab-ctl reconfigure ​

# 重启所有gitlab组件 
sudo gitlab-ctl restart ​

# 启动所有gitlab组件 
sudo gitlab-ctl start

# 启用开机自启动
sudo systemctl enable gitlab-runsvdir.service



